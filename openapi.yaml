openapi: 3.0.3
info:
  title: FEP Service API
  description: API for the Fuel Economy Payment (FEP) Service in the PDS 2.0 ecosystem
  version: 1.0.0
  contact:
    name: PDS 2.0 Team
servers:
  - url: https://fep.gov.uk
    description: Production server
  - url: http://localhost:3003
    description: Local development server

tags:
  - name: did
    description: DID authentication operations
  - name: auth
    description: Authentication operations
  - name: users
    description: User verification operations
  - name: credentials
    description: Verifiable credential operations
  - name: eligibility
    description: Eligibility verification operations
  - name: payments
    description: Payment processing operations
  - name: admin
    description: Administration operations

paths:
  /.well-known/did.json:
    get:
      tags:
        - did
      summary: Get DID document
      description: Retrieves the FEP service's DID document
      operationId: getDidDocument
      responses:
        '200':
          description: DID document
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DidDocument'

  /auth/response:
    post:
      tags:
        - did
      summary: Generate challenge response
      description: Generates a signed response to an authentication challenge
      operationId: generateChallengeResponse
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                challenge:
                  type: string
                did:
                  type: string
                  example: did:web:alice.pds.local
                signature:
                  type: string
              required:
                - challenge
                - did
                - signature
      responses:
        '200':
          description: Valid response
          content:
            application/json:
              schema:
                type: object
                properties:
                  authenticated:
                    type: boolean
                required:
                  - authenticated
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /auth/login:
    post:
      tags:
        - auth
      summary: User login
      description: Authenticates a user with username and password
      operationId: userLogin
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
              required:
                - username
                - password
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                  refreshToken:
                    type: string
                  expiresIn:
                    type: number
                required:
                  - token
                  - refreshToken
                  - expiresIn
        '401':
          description: Invalid credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /auth/refresh:
    post:
      tags:
        - auth
      summary: Refresh token
      description: Get a new access token using a refresh token
      operationId: refreshToken
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                refreshToken:
                  type: string
              required:
                - refreshToken
      responses:
        '200':
          description: Token refreshed
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                  expiresIn:
                    type: number
                required:
                  - token
                  - expiresIn
        '401':
          description: Invalid refresh token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'                  $ref: '#/components/schemas/Error'

  /users/verify-did:
    post:
      tags:
        - users
      summary: Verify user DID ownership
      description: Initiates the verification process for a user's DID with their PDS
      operationId: verifyUserDid
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                did:
                  type: string
                  example: did:web:alice.pds.local
                pdsUrl:
                  type: string
                  example: https://alice.pds.local
              required:
                - did
                - pdsUrl
      responses:
        '202':
          description: Verification initiated
          content:
            application/json:
              schema:
                type: object
                properties:
                  requestId:
                    type: string
                  status:
                    type: string
                    enum: [pending]
                  expiresAt:
                    type: string
                    format: date-time
                required:
                  - requestId
                  - status
                  - expiresAt
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /users/verify-did/{requestId}:
    get:
      tags:
        - users
      summary: Check DID verification status
      description: Checks the status of a DID verification request
      operationId: checkDidVerificationStatus
      security:
        - bearerAuth: []
      parameters:
        - name: requestId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Verification status
          content:
            application/json:
              schema:
                type: object
                properties:
                  requestId:
                    type: string
                  status:
                    type: string
                    enum: [pending, verified, failed]
                  did:
                    type: string
                  verifiedAt:
                    type: string
                    format: date-time
                required:
                  - requestId
                  - status
                  - did
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Request not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /users/bind-did:
    post:
      tags:
        - users
      summary: Bind verified DID to user account
      description: Permanently binds a verified DID to the user's account
      operationId: bindDid
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                did:
                  type: string
                  example: did:web:alice.pds.local
                verificationId:
                  type: string
              required:
                - did
                - verificationId
      responses:
        '200':
          description: DID successfully bound to account
          content:
            application/json:
              schema:
                type: object
                properties:
                  userId:
                    type: string
                  did:
                    type: string
                  boundAt:
                    type: string
                    format: date-time
                  status:
                    type: string
                    enum: [active]
                required:
                  - userId
                  - did
                  - boundAt
                  - status
        '400':
          description: Invalid input or unverified DID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /eligibility/verify:

  /credentials/issue:
    post:
      tags:
        - credentials
      summary: Issue fuel payment credential
      description: Issues a fuel payment eligibility credential to a user
      operationId: issueCredential
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FuelPaymentCredentialRequest'
      responses:
        '201':
          description: Credential issuance initiated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CredentialResponse'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /credentials/{credentialId}/status:
    get:
      tags:
        - credentials
      summary: Check credential status
      description: Checks the status of an issued credential
      operationId: getCredentialStatus
      security:
        - bearerAuth: []
      parameters:
        - name: credentialId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Credential status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CredentialStatus'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Credential not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /credentials/{credentialId}/revoke:
    post:
      tags:
        - credentials
      summary: Revoke credential
      description: Revokes a previously issued credential
      operationId: revokeCredential
      security:
        - bearerAuth: []
      parameters:
        - name: credentialId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                reason:
                  type: string
                  example: Eligibility status changed
              required:
                - reason
      responses:
        '200':
          description: Credential revoked
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CredentialRevocationResult'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Credential not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /payments/apply:
    post:
      tags:
        - payments
      summary: Apply for fuel payment
      description: Apply for a fuel economy payment using a valid credential
      operationId: applyForPayment
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentApplicationRequest'
      responses:
        '201':
          description: Payment application received
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentApplicationResult'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Not eligible
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /payments/{applicationId}/status:
    get:
      tags:
        - payments
      summary: Check payment application status
      description: Checks the status of a payment application
      operationId: getPaymentStatus
      security:
        - bearerAuth: []
      parameters:
        - name: applicationId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Payment application status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentApplicationStatus'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Application not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /admin/payments/stats:
    get:
      tags:
        - admin
      summary: Get payment statistics
      description: Gets statistics on fuel payment applications
      operationId: getPaymentStats
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Payment statistics
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentStats'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /health:
    get:
      summary: Health check endpoint
      description: Returns the health status of the service
      operationId: getHealth
      responses:
        '200':
          description: Health status
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    enum: [ok, degraded, error]
                  version:
                    type: string
                  timestamp:
                    type: string
                    format: date-time

components:
  schemas:
    DidDocument:
      type: object
      properties:
        id:
          type: string
          example: did:web:fep.gov.uk
        verificationMethod:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                example: did:web:fep.gov.uk#key1
              type:
                type: string
                example: Ed25519VerificationKey2020
              controller:
                type: string
                example: did:web:fep.gov.uk
              publicKeyJwk:
                type: object
                properties:
                  kty:
                    type: string
                    example: OKP
                  crv:
                    type: string
                    example: Ed25519
                  x:
                    type: string
                    example: 11qYAYKxCrfVS_7TyWQHOg7hcvPapiMlrwIaaPcHURo
        authentication:
          type: array
          items:
            type: string
            example: did:web:fep.gov.uk#key1
        assertionMethod:
          type: array
          items:
            type: string
            example: did:web:fep.gov.uk#key1
      required:
        - id
        - verificationMethod
        - authentication
        - assertionMethod
        
    UserDidBinding:
      type: object
      properties:
        id:
          type: string
          format: uuid
        userId:
          type: string
          format: uuid
        did:
          type: string
          example: did:web:alice.pds.local
        pdsUrl:
          type: string
          format: uri
          example: https://alice.pds.local
        verificationRequestId:
          type: string
          format: uuid
        verificationStatus:
          type: string
          enum: [pending, verified, failed]
        verifiedAt:
          type: string
          format: date-time
        boundAt:
          type: string
          format: date-time
        lastCheckedAt:
          type: string
          format: date-time
        status:
          type: string
          enum: [active, revoked]
        revokedAt:
          type: string
          format: date-time
        revokedReason:
          type: string
      required:
        - id
        - userId
        - did
        - pdsUrl
        - verificationStatus
        - status
        - authentication
        - assertionMethod

    EligibilityRequest:
      type: object
      properties:
        userWebId:
          type: string
          format: uri
          example: https://john_doe.pds.local/profile/card#me
        personalDetails:
          type: object
          properties:
            fullName:
              type: string
              example: John Doe
            dateOfBirth:
              type: string
              format: date
              example: 1990-01-01
            nationalInsuranceNumber:
              type: string
              example: AB123456C
            householdIncome:
              type: number
              format: float
              example: 25000
            dependents:
              type: integer
              format: int32
              example: 2
            address:
              type: object
              properties:
                line1:
                  type: string
                  example: 123 Main St
                line2:
                  type: string
                  example: Apt 4B
                city:
                  type: string
                  example: London
                postcode:
                  type: string
                  example: SW1A 1AA
              required:
                - line1
                - city
                - postcode
          required:
            - fullName
            - dateOfBirth
            - nationalInsuranceNumber
            - householdIncome
            - address
      required:
        - userWebId
        - personalDetails

    EligibilityResult:
      type: object
      properties:
        eligible:
          type: boolean
          example: true
        eligibilityId:
          type: string
          example: elig_123456
        verificationLevel:
          type: string
          enum: [full, partial, none]
          example: full
        paymentEstimate:
          type: number
          format: float
          example: 400
        errors:
          type: array
          items:
            type: string
            example: National Insurance Number does not match records
      required:
        - eligible
        - eligibilityId
        - verificationLevel

    FuelPaymentCredentialRequest:
      type: object
      properties:
        userWebId:
          type: string
          format: uri
          example: https://john_doe.pds.local/profile/card#me
        eligibilityId:
          type: string
          example: elig_123456
        eligibilityData:
          type: object
          properties:
            fullName:
              type: string
              example: John Doe
            dateOfBirth:
              type: string
              format: date
              example: 1990-01-01
            nationalInsuranceNumber:
              type: string
              example: AB123456C
            eligibilityStatus:
              type: string
              example: eligible
            paymentAmount:
              type: number
              format: float
              example: 400
            assessmentDate:
              type: string
              format: date
              example: 2023-06-15
            expiryDate:
              type: string
              format: date
              example: 2024-06-15
          required:
            - fullName
            - dateOfBirth
            - nationalInsuranceNumber
            - eligibilityStatus
            - paymentAmount
            - assessmentDate
      required:
        - userWebId
        - eligibilityId
        - eligibilityData

    CredentialResponse:
      type: object
      properties:
        id:
          type: string
          example: cred_123456
        requestId:
          type: string
          example: req_123456
        status:
          type: string
          enum: [pending, issued]
          example: pending
        message:
          type: string
          example: Credential issuance initiated, waiting for user authorization
      required:
        - id
        - requestId
        - status

    CredentialStatus:
      type: object
      properties:
        id:
          type: string
          example: cred_123456
        status:
          type: string
          enum: [valid, revoked, expired]
          example: valid
        issuedAt:
          type: string
          format: date-time
        expiresAt:
          type: string
          format: date-time
        revokedAt:
          type: string
          format: date-time
        reason:
          type: string
          example: Eligibility status changed
      required:
        - id
        - status
        - issuedAt

    CredentialRevocationResult:
      type: object
      properties:
        id:
          type: string
          example: cred_123456
        status:
          type: string
          enum: [revoked]
          example: revoked
        revokedAt:
          type: string
          format: date-time
        reason:
          type: string
          example: Eligibility status changed
      required:
        - id
        - status
        - revokedAt
        - reason

    PaymentApplicationRequest:
      type: object
      properties:
        userWebId:
          type: string
          format: uri
          example: https://john_doe.pds.local/profile/card#me
        credentialId:
          type: string
          example: cred_123456
        bankDetails:
          type: object
          properties:
            accountName:
              type: string
              example: John Doe
            sortCode:
              type: string
              example: 12-34-56
            accountNumber:
              type: string
              example: 12345678
          required:
            - accountName
            - sortCode
            - accountNumber
        contactPreferences:
          type: object
          properties:
            email:
              type: string
              format: email
              example: john.doe@example.com
            phone:
              type: string
              example: +44 7700 900000
            preferredMethod:
              type: string
              enum: [email, phone, post]
              example: email
          required:
            - preferredMethod
      required:
        - userWebId
        - credentialId
        - bankDetails
        - contactPreferences

    PaymentApplicationResult:
      type: object
      properties:
        applicationId:
          type: string
          example: app_123456
        status:
          type: string
          enum: [received, processing, approved, rejected, paid]
          example: received
        submissionDate:
          type: string
          format: date-time
        reference:
          type: string
          example: FEP-2023-123456
        message:
          type: string
          example: Your application has been received and will be processed in 3-5 business days
      required:
        - applicationId
        - status
        - submissionDate
        - reference

    PaymentApplicationStatus:
      type: object
      properties:
        applicationId:
          type: string
          example: app_123456
        status:
          type: string
          enum: [received, processing, approved, rejected, paid]
          example: approved
        submissionDate:
          type: string
          format: date-time
        lastUpdated:
          type: string
          format: date-time
        paymentAmount:
          type: number
          format: float
          example: 400
        expectedPaymentDate:
          type: string
          format: date
          example: 2023-07-15
        message:
          type: string
          example: Your application has been approved. Payment will be processed on 15 July 2023.
        history:
          type: array
          items:
            type: object
            properties:
              status:
                type: string
                enum: [received, processing, approved, rejected, paid]
                example: processing
              timestamp:
                type: string
                format: date-time
              message:
                type: string
                example: Application is being processed
            required:
              - status
              - timestamp
      required:
        - applicationId
        - status
        - submissionDate
        - lastUpdated

    PaymentStats:
      type: object
      properties:
        totalApplications:
          type: integer
          format: int32
          example: 1250
        approvedApplications:
          type: integer
          format: int32
          example: 1000
        rejectedApplications:
          type: integer
          format: int32
          example: 250
        pendingApplications:
          type: integer
          format: int32
          example: 25
        totalPaid:
          type: number
          format: float
          example: 400000
        byMonth:
          type: array
          items:
            type: object
            properties:
              month:
                type: string
                example: 2023-06
              applications:
                type: integer
                format: int32
                example: 150
              approved:
                type: integer
                format: int32
                example: 125
              rejected:
                type: integer
                format: int32
                example: 25
              totalPaid:
                type: number
                format: float
                example: 50000
            required:
              - month
              - applications
              - approved
              - rejected
              - totalPaid
      required:
        - totalApplications
        - approvedApplications
        - rejectedApplications
        - pendingApplications
        - totalPaid
        - byMonth

    Error:
      type: object
      properties:
        error:
          type: object
          properties:
            code:
              type: string
              example: eligibility/verification-failed
            message:
              type: string
              example: Eligibility verification failed
            details:
              type: object
      required:
        - error

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
